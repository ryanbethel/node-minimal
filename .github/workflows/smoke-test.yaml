name: Smoke Test

# Push tests commits; pull_request tests PR merges
on: 
  push:
  pull_request:
  schedule:
    - cron: '0 6 * * SUN-SAT'
  workflow_dispatch:
    

jobs:
  
  # TODO: Make GitHub actions template to use with new repos
  # TODO: Setup Sync action to update all the repo workflows from one location (i.e. https://github.com/marketplace/actions/repo-file-sync-action)
  
    sandbox_tests:
        # Setup
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [12.x]
        # Go
        steps:
            - name: Check out repo
              uses: actions/checkout@v1

            - name: Set up Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Env
              run: |
                  echo "Event name: ${{ github.event_name }}"
                  echo "Git ref:    ${{ github.ref }}"
                  echo "GH actor:   ${{ github.actor }}"
                  echo "SHA:        ${{ github.sha }}"
                  VER=`node --version`; echo "Node ver:   $VER"
                  VER=`npm --version`; echo "npm ver:    $VER"
            - name: Install
              run: npm install

            - name: Install Architect
              run: npm i @architect/architect

            - name: Install Test Dependencies
              run: npm i tape tap-spec tiny-json-http @architect/sandbox

            - name: Hydrate
              run: npx arc hydrate
              
            - name: Run Sandbox Tests
              run: QUIET=1 npx tape .github/workflows/smoke-tests/sandbox/**-test.js | npx tap-spec
              
            - name: Notify
              uses: homoluctus/slatify@master
              if: github.ref == 'refs/heads/main' && failure()
              with:
                  type: ${{ job.status }}
                  job_name: "*Sandbox Smoke Tests*"
                  url: ${{ secrets.SLACK_WEBHOOK }}
                  commit: true
                  token: ${{ secrets.GITHUB_TOKEN }}


    staging_tests:
        #Setup
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - name: Check out repo
              uses: actions/checkout@v1

            - name: Set up Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Env
              run: |
                  echo "Event name: ${{ github.event_name }}"
                  echo "Git ref:    ${{ github.ref }}"
                  echo "GH actor:   ${{ github.actor }}"
                  echo "SHA:        ${{ github.sha }}"
                  VER=`node --version`; echo "Node ver:   $VER"
                  VER=`npm --version`; echo "npm ver:    $VER"

            - name: Install
              run: npm install

            - name: Install Architect
              run: npm i @architect/architect

            - name: Install Test Dependencies
              run: npm i tape tap-spec tiny-json-http

            - name: Hydrate
              run: npx arc hydrate
              
            - name: Deploy Staging 
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              run: npx arc deploy --name bx-${GITHUB_SHA::7} | tee deploy_output.txt
            
            - name: Find Staging url
              # TODO: Code review on the RegEx to make sure this is not too fragile
              run: echo "staging_url=$(cat deploy_output.txt | sed -E -n 's@\s*(https:\/\/[a-zA-Z0-9]+\.execute-api\.[a-zA-Z0-9-]+\.amazonaws\.com)@\1@p')" >> $GITHUB_ENV

            - name: Find App Name
              # TODO: Code review on the RegEx to make sure this is not too fragile
              run: echo "app_name=$(cat deploy_output.txt | sed -E -n 's@\s*App ⌁ ([a-zA-Z0-9-]+)\s*@\1@p')" >> $GITHUB_ENV

            - name: Run Staging Tests
              run: QUIET=1 STAGING_URL=${{ env.staging_url }} npx tape .github/workflows/smoke-tests/staging/**-test.js | npx tap-spec
              
            - name: Destroy Infrastructure
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              run: npx arc destroy --app ${{ env.app_name }} --name bx-${GITHUB_SHA::7} --force --now
            
            - name: Notify
              uses: homoluctus/slatify@master
              if: github.ref == 'refs/heads/main' && failure()
              with:
                  type: ${{ job.status }}
                  job_name: "*Staging Smoke Tests*"
                  url: ${{ secrets.SLACK_WEBHOOK }}
                  commit: true
                  token: ${{ secrets.GITHUB_TOKEN }}

    