name: Smoke Test

# Push tests commits; pull_request tests PR merges
on: [push, pull_request]

jobs:
    # Test the build
    # sandbox_tests:
    #     # Setup
    #     runs-on: ubuntu-latest
    #     strategy:
    #         matrix:
    #             node-version: [10.x]
    #     # Go
    #     steps:
    #         - name: Check out repo
    #           uses: actions/checkout@v1

    #         - name: Set up Node.js
    #           uses: actions/setup-node@v1
    #           with:
    #               node-version: ${{ matrix.node-version }}

    #         - name: Env
    #           run: |
    #               echo "Event name: ${{ github.event_name }}"
    #               echo "Git ref:    ${{ github.ref }}"
    #               echo "GH actor:   ${{ github.actor }}"
    #               echo "SHA:        ${{ github.sha }}"
    #               VER=`node --version`; echo "Node ver:   $VER"
    #               VER=`npm --version`; echo "npm ver:    $VER"
    #         - name: Install
    #           run: npm install

    #         - name: Install Architect
    #           run: npm i @architect/architect

    #         - name: Install Test Dependencies
    #           run: npm i tape tap-spec tiny-json-http

    #         - name: Hydrate
    #           run: npx arc hydrate
              
    #         - name: Run Sandbox Tests
    #           run: QUIET=1 npx tape .github/workflows/smoke-tests/sandbox/**-test.js | npx tap-spec
              
    #         - name: Notify
    #           uses: homoluctus/slatify@master
    #           if: always()
    #           with:
    #               type: ${{ job.status }}
    #               job_name: "*Sandbox Tests*"
    #               url: ${{ secrets.SLACK_WEBHOOK }}
    #               commit: true
    #               token: ${{ secrets.GITHUB_TOKEN }}


    staging_tests:
        #Setup
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - name: Check out repo
              uses: actions/checkout@v1

            - name: Set up Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Env
              run: |
                  echo "Event name: ${{ github.event_name }}"
                  echo "Git ref:    ${{ github.ref }}"
                  echo "GH actor:   ${{ github.actor }}"
                  echo "SHA:        ${{ github.sha }}"
                  VER=`node --version`; echo "Node ver:   $VER"
                  VER=`npm --version`; echo "npm ver:    $VER"

            - name: Create ~/.aws/credentials
              env:
                   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              run: mkdir $HOME/.aws && printf "[default]\naws_access_key_id=$AWS_ACCESS_KEY_ID\naws_secret_access_key=$AWS_SECRET_ACCESS_KEY\nregion=us-west-1\n" > $HOME/.aws/credentials && cat $HOME/.aws/credentials

            - name: Install
              run: npm install

            - name: Install Architect
              run: npm i @architect/architect

            - name: Install Test Dependencies
              run: npm i tape tap-spec tiny-json-http

            - name: Hydrate
              run: npx arc hydrate
              
            - name: Deploy Staging
              run: npx arc deploy

            # - name: Run Staging Tests
            #   run: QUIET=1 npx tape .github/workflows/smoke-tests/staging/**-test.js | npx tap-spec
              
              
            - name: Notify
              uses: homoluctus/slatify@master
              if: always()
              with:
                  type: ${{ job.status }}
                  job_name: "*Sandbox Tests*"
                  url: ${{ secrets.SLACK_WEBHOOK }}
                  commit: true
                  token: ${{ secrets.GITHUB_TOKEN }}

    #         - name: Test
    #           run: npm test

    #         - name: Notify
    #           uses: homoluctus/slatify@master
    #           # Only fire alert once; may need `&& matrix.node-version == '10.x' && matrix.os == 'ubuntu-latest'` later
    #           if: github.ref == 'refs/heads/main' && failure()
    #           with:
    #               type: ${{ job.status }}
    #               job_name: "*Build*"
    #               url: ${{ secrets.SLACK_WEBHOOK }}
    #               commit: true
    #               token: ${{ secrets.GITHUB_TOKEN }}

    # # Assuming all that went fine (and it's master): deploy!
    # deploy:
    #     # Setup
    #     needs: build
    #     if: github.ref == 'refs/heads/master'
    #     runs-on: ubuntu-latest

    #     # Go
    #     steps:
    #         - name: Check out repo
    #           uses: actions/checkout@v1

    #         - name: Set up Node.js
    #           uses: actions/setup-node@v1
    #           with:
    #               node-version: 10

    #         # - name: Create ~/.aws/credentials
    #         #   env:
    #         #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #         #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #         #   run: mkdir $HOME/.aws && printf "[smallwins]\naws_access_key_id=$AWS_ACCESS_KEY_ID\naws_secret_access_key=$AWS_SECRET_ACCESS_KEY\nregion=us-west-1\n" > $HOME/.aws/credentials && cat $HOME/.aws/credentials

    #         - name: Install
    #           run: npm ci

    #         - name: Deploy
    #           run: npm run deploy
    #           env:
    #               AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #               AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #               CI: true
    #               ARC_MAX_NPM: 10
    #               # AWS_PROFILE: smallwins

    #         - name: Notify
    #           uses: homoluctus/slatify@master
    #           if: always()
    #           with:
    #               type: ${{ job.status }}
    #               job_name: "*Deploy*"
    #               url: ${{ secrets.SLACK_WEBHOOK }}
    #               commit: true
    #               token: ${{ secrets.GITHUB_TOKEN }}
